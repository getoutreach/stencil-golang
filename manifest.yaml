name: github.com/getoutreach/stencil-golang
## <<Stencil::Block(keys)>>
type: templates,extension
arguments:
  terraform.datadog.monitoring.argocd.appHealth.notify:
    type: boolean
    description: Alert when ArgoCD health is not healthy
  terraform.datadog.monitoring.argocd.syncStatus.notify:
    type: boolean
    description: Alert when ArgoCD syncStatus is not synced
  terraform.datadog.monitoring.argocd.syncStatus.evaluationWindow:
    type: string
    description: The amount of time to query the ArgoCD Sync Status alert over (i.e. last_15m)
  terraform.datadog.monitoring.argocd.appHealth.evaluationWindow:
    type: string
    description: The amount of time to query the ArgoCD App Health alert over (i.e. last_15m)
  terraform.datadog.monitoring.generateSLOs:
    type: boolean
    default: true
    description: Have stencil generate Datadog service level objectives based on HTTP/GRPC queries/monitors.
  service:
    schema:
      type: boolean
    description: Whether or not this application is a runnable service. This flag provides the service activity interface and everything necessary for releasing and deploying a service.
  serviceActivities:
    schema:
      type: array
      items:
        type: string
        enum:
          - http
          - grpc
          - temporal
          - kafka
          - python
    description: Any valid built-in service activities can be supplied here and they will be provided. The `service` flag must be set to true. Valid values for this are `http`, `grpc`, `temporal`, `python` and `kafka`.
  oss:
    schema:
      type: boolean
    description: Deprecated, denotes this is an open source repository.
    deprecated: true
  commands:
    schema:
      type: array
      items:
        anyOf:
          - type: string
          - type: object
            properties:
              delibird:
                type: boolean
                description: |-
                  Opt into using using local files for tracing/session recording for usage with Delibird. This is used to prevent telemetry from leaving a user's
                  machine, without an accompanying daemon component running that uploads them to delibird. The primary usecase is for being OSS friendly.
              unmanaged:
                type: boolean
                description: If true, stencil will not generate an entrypoint go file for this CLI (`cmd/<name>/<name>.go`), but still will build and distribute it.
    description: List of CLI commands to generate for this repository
  grpcClients:
    schema:
      type: array
      items:
        type: string
        enum:
          - node
          - ruby
    description: List of grpc clients to generate for this gRPC service. Type must include gRPC
  reportingTeam:
    schema:
      type: string
    description: ID of team that that manages the repository
  kubernetes.groups:
    schema:
      type: array
      items:
        type: object
    description: List of Kubernetes groups to generate
  lintroller:
    schema:
      type: string
      enum:
        - platinum
        - gold
        - silver
        - bronze
    description: lintroller level to apply to this repository
    default: platinum
  metrics:
    schema:
      type: string
      enum:
        - datadog
        - opentelemetry
        - dual
    description: Metrics collector to use (supports opentelemetry and datadog)
    default: datadog
  tracing:
    schema:
      type: string
      enum:
        - opentelemetry
    descriptions: Tracing backend to send traces to
    default: opentelemetry
  slack:
    schema:
      type: string
    description: Slack channel to send deployment messages into.
  vaultSecrets:
    schema:
      type: array
      items:
        type: string
    description: List of secrets to consume from Vault, if Vault is enabled in the box config
  mixins:
    schema:
      type: array
      items:
        type: string
    description: "List of mixins to also import. Set in override.jsonnet instead"
    deprecated: true
  dependencies.optional:
    schema:
      type: array
      items:
        type: string
    description: Dependencies your repository needs, but not always (e.g. E2E tests).
  dependencies.required:
    schema:
      type: array
      items:
        type: string
    description: Dependencies your repository requires to run successfully no matter what.
  terraform.datadog.grpc.tags:
    schema:
      type: array
      items:
        type: string
    description: Filter metrics used to create monitors and alerts in Datadog for gRPC related events.
  terraform.datadog.grpc.evaluationWindow:
    schema:
      type: string
    description: The window of time to evaluate metrics related to gRPC events for each monitor and alert.
  terraform.datadog.grpc.lowTrafficCountThreshold:
    schema:
      type: number
    description: Overrides the low count threshold in the "grpc_latency_high" & "grpc_success_rate_low" terraform modules in monitoring/datadog.tf.
  terraform.datadog.grpc.latency.percentiles.lowTraffic:
    schema:
      type: number
    description: Overrides the low traffic percentile in the "grpc_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.grpc.latency.percentiles.highTraffic:
    schema:
      type: number
    description: Overrides the high traffic percentile in the "grpc_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.grpc.latency.thresholds.lowTraffic:
    schema:
      type: number
    description: Overrides the low traffic threshold in the "grpc_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.grpc.latency.thresholds.highTraffic:
    schema:
      type: number
    description: Overrides the high traffic threshold in the "grpc_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.grpc.qos.thresholds.lowTraffic:
    schema:
      type: number
    description: Overrides the low traffic threshold in the "grpc_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.grpc.qos.thresholds.highTraffic:
    schema:
      type: number
    description: Overrides the high traffic threshold in the "grpc_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.evaluationWindow:
    schema:
      type: string
    description: The window of time to evaluate metrics related to HTTP events for each monitor and alert.
  terraform.datadog.http.percentiles.lowTraffic:
    schema:
      type: number
    description: Overrides the low traffic percentile in the "http_success_rate_low" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.percentiles.highTraffic:
    schema:
      type: number
    description: Overrides the high traffic percentile in the "http_success_rate_low" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.thresholds.lowCount:
    schema:
      type: number
    description: Overrides the low count threshold in the "http_success_rate_low" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.thresholds.lowTraffic:
    schema:
      type: number
    description: Overrides the low traffic threshold in the "http_success_rate_low" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.thresholds.highTraffic:
    schema:
      type: number
    description: Overrides the high traffic threshold in the "http_success_rate_low" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.latency.count.highCount:
    schema:
      type: number
    description: Overrides the high count threshold in the "http_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.latency.thresholds.lowTraffic:
    schema:
      type: number
    description: Overrides the low traffic threshold in the "http_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.http.latency.thresholds.highTraffic:
    schema:
      type: number
    description: Overrides the high traffic threshold in the "http_latency_high" terraform module in monitoring/datadog.tf.
  terraform.datadog.podRestart.thresholds.lowCount:
    schema:
      type: number
    description: Overrides the pod restarts threshold in the "pod_restarts" terraform module in monitoring/datadog.tf.
  terraform.datadog.podRestart.thresholds.highCount:
    schema:
      type: number
    description: Overrides the high pod restarts threshold in the "pod_restarts_high" terraform module in monitoring/datadog.tf.
  deployment.serviceDomains:
    description: The service domains that the service is deployed to.
    schema:
      type: array
  deployment.environments:
    description: A list of environments that the service is deployed to.
    schema:
      type: array
  deployment.strategy:
    description: The deployment strategy is the method used to deploy the application.
    schema:
      type: string
      enum:
        - "" # current default deployment strategy is RollingUpdate
        - canary
    default: ""
  versions.go:
    description: Go version to use
    default: "1.19.5"
    schema:
      type:
        - string
        - number
  versions.nodejs:
    description: Nodejs version to use for build tooling (e.g., semantic-release)
    default: "18.14.1"
    schema:
      type:
        - string
        - number
  versions.grpcClients.nodejs:
    description: Nodejs version to use for gRPC clients
    default: "16.19.0"
    schema:
      type:
        - string
        - number
  versions.grpcClients.ruby:
    description: Ruby version to use for gRPC clients
    default: "2.7.5"
    schema:
      type:
        - string
        - number
  versions.alpine:
    description: Alpine version to use
    default: "3.16"
    schema:
      type:
        - string
        - number
  versions.terraform:
    schema:
      type: string
    default: "1.4.4"
    description: The version of terraform that is used.
  disableGrpcGeneration:
    description: Disable gRPC generation
    schema:
      type: boolean
  go.stanza:
    description: Go stanza version
    default: "1.19"
    schema:
      type:
        - string
## <</Stencil::Block>>
