(*codegen.File)(# syntax=docker/dockerfile:1.0-experimental
FROM gcr.io/outreach-docker/golang:1.22.0 as builder
ARG VERSION
ENV GOCACHE "/go-build-cache"
ENV GOPRIVATE github.com/getoutreach/*
ENV CGO_ENABLED 0
WORKDIR /src

# Copy our source code into the container for building
COPY . .

## <<Stencil::Block(beforeBuild)>>

## <</Stencil::Block>>

# Cache dependencies across builds
RUN --mount=type=ssh --mount=type=cache,target=/go/pkg go mod download

# Build our application, caching the go build cache, but also using
# the dependency cache from earlier.
RUN --mount=type=ssh --mount=type=cache,target=/go/pkg --mount=type=cache,target=/go-build-cache \
    mkdir -p bin; \
    go build -o /src/bin/ -ldflags "-X github.com/getoutreach/gobox/pkg/app.Version=$VERSION" -v ./cmd/...

FROM gcr.io/outreach-docker/alpine:3.1
ENTRYPOINT ["/usr/local/bin/testing"]

LABEL "io.outreach.reporting_team"="fnd-seal"
LABEL "io.outreach.repo"="testing"

# Add timezone information.
COPY --from=builder /usr/local/go/lib/time/zoneinfo.zip /zoneinfo.zip
ENV ZONEINFO=/zoneinfo.zip

# Install certificates for RDS connectivity.
RUN apk add --no-cache curl \
    && curl "https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem" \
      --output /usr/local/share/ca-certificates/global-bundle.pem \
    && update-ca-certificates \
    && apk del --no-cache curl

## <<Stencil::Block(afterBuild)>>

## <</Stencil::Block>>

COPY --from=builder /src/bin/testing /usr/local/bin/testing
USER systemuser
)
