(*codegen.File)(# syntax=docker/dockerfile:1.0-experimental
## <<Stencil::Block(buildStages)>>

## <</Stencil::Block>>
FROM registry.example.com/foo/golang:1.0.0 AS builder
ARG VERSION
ENV GOCACHE "/go-build-cache"
ENV GOPRIVATE github.com/getoutreach/*
ENV CGO_ENABLED 0
WORKDIR /src

# Copy our source code into the container for building
COPY . .

## <<Stencil::Block(beforeBuild)>>

## <</Stencil::Block>>

# Cache dependencies across builds
RUN --mount=type=ssh --mount=type=cache,target=/go/pkg go mod download

# Build our application, caching the go build cache, but also using
# the dependency cache from earlier.
RUN --mount=type=ssh --mount=type=cache,target=/go/pkg --mount=type=cache,target=/go-build-cache \
  mkdir -p bin; \
  go build -o /src/bin/ -ldflags "-X github.com/getoutreach/gobox/pkg/app.Version=$VERSION" -v ./cmd/...

FROM registry.example.com/foo/alpine:3.1
ENTRYPOINT ["/usr/local/bin/testing", "--skip-update"]

LABEL "io.outreach.reporting_team"="fnd-seal"
LABEL "io.outreach.repo"="testing"

## <<Stencil::Block(afterBuild)>>

## <</Stencil::Block>>

COPY --from=builder /src/bin/testing /usr/local/bin/testing
USER systemuser
)
