# Please re-run stencil after any changes to this file as invalid
# syntax, such as anchors, will be fixed automatically.
version: 2.1
orbs:
  shared: getoutreach/shared@2.34.3
  queue: eddiewebb/queue@2.2.1
  ## <<Stencil::Block(CircleCIExtraOrbs)>>
  crucible: getoutreach/crucible@1.3.1
  ## <</Stencil::Block>>

parameters:
  rebuild_cache:
    type: boolean
    default: false
  release_rc:
    type: boolean
    default: false
  ## <<Stencil::Block(CircleCIExtraParams)>>
  additional_repos:
    type: string
    description: Space-separated list of additional repos (sans owner) to run against.
    default: ""
  all_repos:
    type: boolean
    description: Whether to run the test against all repos in the org. Overrides `additional_repos`.
    default: false
  excluded_repos:
    type: string
    description: Comma-separated list of repos (sans owner) to NOT run against.
    default: ""
  repo_map:
    type: string
    description: 'A space-separated mapping of service catalog names to repo names, e.g. "service1=repo1 service2=repo2".'
    default: ""
  run_config:
    type: string
    description: Serialized YAML config for each Crucible run.
    default: ""
  services_only:
    type: boolean
    description: Whether to filter by microservices (as opposed to CLIs/libraries/etc.)
    default: false
  teams:
    type: string
    description: Comma-separated list of teams who own repos to run the test against.
    default: ""
  test_name:
    type: string
    description: The name of the test specified in the YAML config to run on each repo via Crucible.
    default: ""
  repos:
    type: string
    description: Space-separated list of repos (sans owner) to run against.
    default: ""
  ## <</Stencil::Block>>

# Extra contexts to expose to all jobs below
contexts: &contexts
  - aws-credentials
  - ghaccesstoken
  - docker-registry
  - npm-credentials
  - box
  - vault-dev
  - confluence
  - circleci-credentials
  - tray-webhooks
  - wizcli
  ## <<Stencil::Block(extraContexts)>>

  ## <</Stencil::Block>>

# Test configs to pass to test and cache jobs
test: &test
  context: *contexts
  app_name: stencil-golang
  executor_name: testbed-docker-aws
  ### Start parameters inserted by other modules
  ### End parameters inserted by other modules
  ## <<Stencil::Block(circleTestExtra)>>
  docker_tag: latest
  ## <</Stencil::Block>>

# Branches used for releasing code, pre-release or not
release_branches: &release_branches # Release branch
  - "release"
  # Pre-releases branch
  - "main"

## <<Stencil::Block(circleAnchorExtra)>>

## <</Stencil::Block>>

jobs:
  {}
  ## <<Stencil::Block(circleJobs)>>

  ## <</Stencil::Block>>

  ### Start jobs inserted by other modules
  ### End jobs inserted by other modules

workflows:
  ## <<Stencil::Block(circleWorkflows)>>
  generate-crucible-config:
    jobs:
      - crucible/generate-config:
          additional_repos: << pipeline.parameters.additional_repos >>
          all_repos: << pipeline.parameters.all_repos >>
          excluded_repos: << pipeline.parameters.excluded_repos >>
          repo_map: << pipeline.parameters.repo_map >>
          run_config: << pipeline.parameters.run_config >>
          services_only: << pipeline.parameters.services_only >>
          teams: << pipeline.parameters.teams >>
          test_name: << pipeline.parameters.test_name >>
  ## <</Stencil::Block>>

  ### Start workflows inserted by other modules
  ### End workflows inserted by other modules

  rebuild-cache:
    triggers:
      - schedule:
          # Every day at 00:00 UTC.
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - shared/save_cache: *test

  manual-rebuild-cache:
    when: << pipeline.parameters.rebuild_cache >>
    jobs:
      - shared/save_cache: *test

  auto-release-rc:
    triggers:
      - schedule:
          cron: 0 19 * * 2
          filters:
            branches:
              only:
                - main
    jobs:
      - shared/trigger_rc_release:
          context: *contexts
          release_failure_slack_channel: "#dt-notifications"
          ## <<Stencil::Block(circleAutoTriggerRCExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>

  manual-release-rc:
    when: << pipeline.parameters.release_rc>>
    jobs:
      - shared/trigger_rc_release:
          context: *contexts
          release_failure_slack_channel: "#dt-notifications"
          ## <<Stencil::Block(circleManualTriggerRCExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>

  release:
    when:
      and:
        - not: << pipeline.parameters.rebuild_cache >>
        - not: << pipeline.parameters.release_rc >>
    jobs:
      ## <<Stencil::Block(circleWorkflowJobs)>>

      ## <</Stencil::Block>>
      ### Start jobs inserted by other modules
      ### End jobs inserted by other modules
      - shared/release: &release
          dryrun: false
          context: *contexts
          release_failure_slack_channel: "#dt-notifications"
          ## <<Stencil::Block(circleReleaseExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>
          requires:
            ## <<Stencil::Block(circleReleaseRequires)>>

            ## <</Stencil::Block>>
            - shared/test
          filters:
            branches:
              only: release
      - shared/pre-release: &pre-release
          dryrun: false
          context: *contexts
          release_failure_slack_channel: "#dt-notifications"
          ## <<Stencil::Block(circlePreReleaseExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>
          requires:
            ## <<Stencil::Block(circlePreReleaseRequires)>>

            ## <</Stencil::Block>>
            - shared/test
          filters:
            branches:
              only:
                - main
      # Dryrun for PRs
      - shared/pre-release: &pre-release
          dryrun: true
          context: *contexts
          ## <<Stencil::Block(circlePreReleaseDryRunExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>
          requires:
            ## <<Stencil::Block(circlePreReleaseDryRunRequires)>>

            ## <</Stencil::Block>>
            - shared/test
          filters:
            branches:
              ignore: *release_branches
      - shared/test:
          <<: *test
          ## <<Stencil::Block(circleSharedTestExtra)>>

          ## <</Stencil::Block>>
      - shared/publish_docs:
          context: *contexts
          executor_name: testbed-docker-aws
          filters:
            branches:
              only:
                - main
            tags:
              only: /v\d+(\.\d+)*(-.*)*/
tests:
  lint:
    modules:
      - name: stencil-golang # only need the basename of the module
        branch: mnagy/dt-4821
    commands:
      - make lint
  stencil-upgrade-go:
    modules:
      - name: stencil-golang
        branch: main
      - name: devbase
        branch: main
    commands:
      - stencil
      - make lint
